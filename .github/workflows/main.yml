name: 'Action to deploy to GAE'


on:
  workflow_call:
    inputs:
      module_name:
        description: 'Application module name'
        required: false  
        type: string
      environment:
        description: 'Execution environment'
        type: string
      gae_auth_json:
        description: 'Authentication file in GAE'
        type: string
      cloud:
        description: 'Cloud provider/service'
        type: string
      version_suffix:
        description: 'Version suffix'
        type: string
      deployment_type:
        description: 'Deployment name type(aks,gke...)'
        type: string
      deploy_tool:
        description: 'Deployment tool(KUSTOMIZE,RAW,HELM)'
        type: string
      namespace:
        description: 'Namespace'
        type: string
      azure_credentials:
        description: 'Azure credentials'
        type: string
      with_deploy:
        description: 'If true allows for deployment on azure/google'
        type: string


jobs:
  Publish:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Setup docker folder
        shell: bash
        run: |
          if [[ -d "./tmd/target" ]]; then
              cp -v -r ./tmd/target/* .
          fi
          
          if [[ -d "./tmd/service.${{ inputs.module_name }}.serverside/target" ]]; then
              cp -v -r ./tmd/service.${{ inputs.module_name }}.serverside/target/* .
          fi 
          ls -l
          cd  ./tmd/deploy/${{ inputs.environment }}/docker
          ls -l

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ghcr.io/thalissonorg/${{ github.sha }}
          build-args: |
            RELEASE_VERSION=69066580971
          file: tmd/deploy/${{ inputs.environment }}/docker/Dockerfile

  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  
  
    
      - name: Bake Kustomize
        id: bake_kustomize
        uses: azure/k8s-bake@v2.4
        if: ${{ inputs.deploy_tool == 'KUSTOMIZE' }}
        with:
          renderEngine: 'kustomize'
          kustomizationPath: 'deploy/${{ inputs.environment }}/aks/'
          kubectl-version: 'latest'

      - name: Bake Helm
        id: bake_helm
        uses: azure/k8s-bake@v2.4
        if: ${{ inputs.deploy_tool == 'HELM' }}
        with:
          renderEngine: 'helm'
          helmChart: 'deploy/${{ inputs.environment }}/${{ inputs.deployment_type }}/'
          helm-version: 'latest'
          silent: 'false'
          namespace: ${{ inputs.namespace }}

      - name: Setup manifest path
        shell: bash
        run: |
             if [ ${{ inputs.deploy_tool }} == 'KUSTOMIZE' ]; then 
                echo "manifests = ${{ steps.bake_kustomize.outputs.manifestsBundle }}" >> $GITHUB_ENV
             fi
             if [ ${{ inputs.deploy_tool }} == 'HELM' ]; then 
                echo "manifests = ${{ steps.bake_helm.outputs.manifestsBundle }}" >> $GITHUB_ENV
             fi
             if [ ${{ inputs.deploy_tool }} == 'RAW' ]; then 
                echo "manifests = deploy/${{ inputs.environment }}/${{ inputs.deployment_type }}/" >> $GITHUB_ENV
             fi    

      - name: Setup manifest path
        shell: bash
        run: |
          folder="/home/runner/work/_temp"

          # Check if the folder exists
          if [ -d "$folder" ]; then
              # Loop through each file in the folder and perform 'cat' for YAML files
              for file in "$folder"/*.yaml; do
                  if [ -f "$file" ]; then
                      echo "Contents of $file:"
                      cat "$file"
                      echo "------------------------"
                  fi
              done
          else
              echo "Folder $folder does not exist."
          fi

      - name: Azure set context
        if: ${{ inputs.cloud == 'AKS' }}
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ inputs.azure_credentials }}
          resource-group: resource_group1
          cluster-name: aks-deploy

      - name: Azure Setup kubectl
        if: ${{ inputs.cloud == 'AKS' }}
        uses: azure/setup-kubectl@v2.0

      - name: Deploy AKS
        if: ${{ inputs.cloud == 'AKS' }}
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.manifests }}

      - name: Deploy GKE
        if: ${{ inputs.cloud == 'GKE' }}
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          metadata: ${{ env.manifests }}
